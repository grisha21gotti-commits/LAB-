код:
def partition(a, low, high):
    pivot = a[high]          # опорный — последний
    i = low - 1              # индекс последнего элемента < pivot
    for j in range(low, high):
        if a[j] <= pivot:
            i += 1
            a[i], a[j] = a[j], a[i]
    a[i + 1], a[high] = a[high], a[i + 1]
    return i + 1

def quick_sort(a, low, high):
    if low < high:
        pi = partition(a, low, high)
        quick_sort(a, low, pi - 1)
        quick_sort(a, pi + 1, high)

if __name__ == "__main__":
    arr = [10, 7, 8, 9, 1, 5]
    print("Исходный:", arr)
    quick_sort(arr, 0, len(arr) - 1)
    print("Отсортированный:", arr)

Пояснения:
partition: на выходе опорный на своём месте; слева ≤ pivot, справа > pivot.
quick_sort: рекурсивно сортирует левую и правую части.
Результат работы кода:Исходный: [10, 7, 8, 9, 1, 5]
Отсортированный: [1, 5, 7, 8, 9, 10]
