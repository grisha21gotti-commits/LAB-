код:
def fib_search(arr, x):
    n = len(arr)

    # создаём наименьшее Fib число >= n
    fib_m2, fib_m1 = 0, 1
    fib_m = fib_m2 + fib_m1
    while fib_m < n:
        fib_m2, fib_m1 = fib_m1, fib_m
        fib_m = fib_m2 + fib_m1

    offset = -1  # отсечённая часть слева

    while fib_m > 1:
        i = min(offset + fib_m2, n - 1)

        if arr[i] < x:
            fib_m = fib_m1
            fib_m1 = fib_m2
            fib_m2 = fib_m - fib_m1
            offset = i
        elif arr[i] > x:
            fib_m = fib_m2
            fib_m1 = fib_m1 - fib_m2
            fib_m2 = fib_m - fib_m1
        else:
            return i

    # проверка на последний элемент
    if fib_m1 and offset + 1 < n and arr[offset + 1] == x:
        return offset + 1
    return -1

if __name__ == "__main__":
    a = [10, 22, 35, 40, 45, 50, 80, 82, 85, 90, 100]
    print("Ищем 85 -> индекс:", fib_search(a, 85))
    print("Ищем 77 -> индекс:", fib_search(a, 77))
Пояснения:
Генерируем Fib-числа, пока F[m] >= n.
offset — смещение левого края «живого» отрезка.
Сравнения и сдвиги границ зависят от результата сравнения arr[i] с x.
Вывод:
Ищем 85 -> индекс: 8
Ищем 77 -> индекс: -1
